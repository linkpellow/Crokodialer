#!/bin/bash

# TURN Server Deployment Script for Crokodial Dialer
# This script automates the coturn installation and configuration

set -e

# Color codes for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Function to print colored output
print_message() {
    local color=$1
    local message=$2
    echo -e "${color}${message}${NC}"
}

# Check if running as root or with sudo
if [[ $EUID -ne 0 ]]; then
   print_message $RED "This script must be run as root or with sudo"
   exit 1
fi

print_message $GREEN "=== Crokodial TURN Server Setup ==="

# Get server configuration
read -p "Enter your public server IP: " SERVER_IP
read -p "Enter your domain (or press enter to use IP): " DOMAIN
read -p "Enter TURN username: " TURN_USER
read -s -p "Enter TURN password: " TURN_PASS
echo

# Use domain or IP for realm
REALM=${DOMAIN:-$SERVER_IP}

print_message $YELLOW "\nInstalling coturn..."
apt update
apt install coturn -y

print_message $YELLOW "\nEnabling coturn service..."
# Enable coturn
sed -i 's/#TURNSERVER_ENABLED=1/TURNSERVER_ENABLED=1/' /etc/default/coturn

print_message $YELLOW "\nConfiguring coturn..."
# Backup original config
cp /etc/turnserver.conf /etc/turnserver.conf.backup.$(date +%Y%m%d%H%M%S)

# Create new configuration
cat > /etc/turnserver.conf << EOF
# Coturn TURN Server configuration
# Generated by Crokodial deploy script

# Network settings
listening-port=3478
tls-listening-port=5349

listening-ip=$SERVER_IP
relay-ip=$SERVER_IP

# Port range for relay
min-port=49152
max-port=65535

# Security settings
fingerprint
lt-cred-mech
realm=$REALM
user=$TURN_USER:$TURN_PASS

# Quota settings
total-quota=100
bps-capacity=0
stale-nonce

# Network restrictions
no-loopback-peers
no-multicast-peers

# Logging
log-file=/var/log/turnserver/turnserver.log
verbose

# Process settings
proc-user=turnserver
proc-group=turnserver
EOF

print_message $YELLOW "\nCreating log directory..."
mkdir -p /var/log/turnserver
chown turnserver:turnserver /var/log/turnserver

print_message $YELLOW "\nConfiguring firewall..."
# Configure UFW firewall
ufw allow 3478/tcp
ufw allow 3478/udp
ufw allow 5349/tcp
ufw allow 5349/udp
ufw allow 49152:65535/udp

# Enable firewall if not already enabled
if ufw status | grep -q "Status: inactive"; then
    print_message $YELLOW "Enabling UFW firewall..."
    ufw --force enable
fi

print_message $YELLOW "\nStarting coturn service..."
systemctl enable coturn
systemctl restart coturn

# Check if service is running
if systemctl is-active --quiet coturn; then
    print_message $GREEN "\n✓ Coturn is running successfully!"
else
    print_message $RED "\n✗ Coturn failed to start. Check logs: journalctl -u coturn"
    exit 1
fi

print_message $GREEN "\n=== Configuration Summary ==="
echo "Server IP: $SERVER_IP"
echo "Realm: $REALM"
echo "Username: $TURN_USER"
echo "STUN URI: stun:$SERVER_IP:3478"
echo "TURN URI: turn:$SERVER_IP:3478"

print_message $YELLOW "\n=== Add to your .env file ==="
cat << EOF
STUN_SERVER=stun:stun.l.google.com:19302
TURN_SERVER=turn:$SERVER_IP:3478
TURN_USERNAME=$TURN_USER
TURN_PASSWORD=$TURN_PASS
EOF

print_message $GREEN "\n✓ TURN server setup complete!"
print_message $YELLOW "\nTo test: turnutils_uclient -u $TURN_USER -w [password] $SERVER_IP"
print_message $YELLOW "View logs: tail -f /var/log/turnserver/turnserver.log" 